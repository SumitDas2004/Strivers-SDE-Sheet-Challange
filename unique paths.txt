import java.util.* ;

import java.io.*; 
public class Solution {
	// static int solve(int i, int j, int m, int n, int dp[][]){
	// 	if(i==m-1 && j==n-1)return 1;
	// 	if(i>=m || j>=n)return 0;	
	// 	if(dp[i][j]!=-1)return dp[i][j];
	// 	return dp[i][j]=solve(i+1, j, m, n, dp)+solve(i, j+1, m, n, dp);
	// }
	public static int uniquePaths(int m, int n) {
		// Write your code here.
		int dp[][]=new int[m][n];
		// for(int i[]:dp)Arrays.fill(i, 0);
		// return solve(0, 0, m, n, dp);
		dp[m-1][n-1]=1;
		for(int i=m-1;i>=0;i--){
			for(int j=n-1;j>=0;j--){
				if(i==m-1 && j==n-1)continue;
				int bottom=i<m-1?dp[i+1][j]:0;
				int right=j<n-1?dp[i][j+1]:0;
				dp[i][j]=bottom+right;
			}
		}
		return dp[0][0];
	}
}