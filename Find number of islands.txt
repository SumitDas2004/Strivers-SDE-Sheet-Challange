public class Solution 
{
    static int dirx[]={1, -1, 0, 0, -1, 1, -1, 1};
    static int diry[]={0, 0, 1, -1, 1, -1, -1, 1};
    static void dfs(int[][] mat, int i, int j, boolean visited[][]){
        for(int e=0;e<8;e++){
            int x=dirx[e]+i;
            int y=diry[e]+j;
            if(x<0 || y<0 || x==mat.length || y==mat[0].length || visited[x][y] || mat[x][y]==0)continue;
            visited[x][y]=true;
            dfs(mat, x, y, visited);
        }
    }
    public static int getTotalIslands(int[][] mat) 
	{
        //Your code goes here
        int cnt=0;
        boolean visited[][]=new boolean[mat.length][mat[0].length];
        for(int i=0;i<mat.length;i++){
            for(int j=0;j<mat[0].length;j++){
                if(visited[i][j] || mat[i][j]==0)continue;
                visited[i][j]=true;
                dfs(mat, i, j, visited);
                cnt++;
            }
        }
        return cnt;
    }
}