import java.util.* ;
import java.io.*; 
/*************************************************************
    Following is the Binary Tree node structure

	class TreeNode<T> {
	    public T data;
	    public TreeNode<T> left;
	    public TreeNode<T> right;

	    TreeNode(T data) {
	        this.data = data;
	        left = null;
	        right = null;
	    }
	}

*************************************************************/

import java.util.ArrayList;

public class Solution {
	static int pre=-1;
	static int suc=-1;
	static void solve(BinaryTreeNode<Integer> root, int k){
		if(root==null)return ;
		solve(root.left, k);
		if(root.data<k)pre=root.data;
		if(root.data>k && suc==-1)suc=root.data;
		solve(root.right, k);
	}
	public static ArrayList<Integer> predecessorSuccessor(BinaryTreeNode<Integer> root, int key) {
		// Write your code here.
		ArrayList<Integer> list=new ArrayList<>();
		if(root==null){
			list.add(-1);
			list.add(-1);
			return list;
		}
		pre=-1;
		suc=-1;
		solve(root, key);
		list.add(pre);
		list.add(suc);
		return list;
		
	}
}