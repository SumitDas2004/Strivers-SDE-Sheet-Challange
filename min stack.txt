import java.util.* ;
import java.io.*; 

public class Solution {

    static class MinStack {
        Stack<int[]> st;

        // Constructor
        MinStack() {
            // Write your code here.
            st=new Stack<>();
        }

        // Function to add another element equal to num at the top of stack.
        void push(int num) {
            // Write your code here.
            if(st.isEmpty())
            st.push(new int[]{num, num});
            else 
            st.push(new int[]{num, Math.min(num, st.peek()[1])});
        }

        // Function to remove the top element of the stack.
        int pop() {
            // Write your code here.
            if(st.isEmpty())return -1;
            return st.pop()[0];
        }

        // Function to return the top element of stack if it is present. Otherwise
        // return -1.
        int top() {
            // Write your code here.
            if(st.isEmpty())return -1;
            return st.peek()[0];
        }

        // Function to return minimum element of stack if it is present. Otherwise
        // return -1.
        int getMin() {
            // Write your code here.
            if(st.isEmpty())return -1;
            return st.peek()[1];
        }
    }
}