import java.util.* ;
import java.io.*; 
public class Solution {
    public static int[] maxMinWindow(int[] a, int n) {
        // Write your code here
        int left[]=new int[n+1];
        int right[]=new int[n+1];
        int ans[]=new int[n+1];
        Arrays.fill(left, -1);
        Arrays.fill(right, n);
        Arrays.fill(ans, Integer.MIN_VALUE);
        Stack<Integer> st=new Stack<>();
        for(int i=0;i<n;i++){
            while(!st.isEmpty() && a[st.peek()]>=a[i])st.pop();
            if(!st.isEmpty())
             left[i]=st.peek();
            st.push(i);
        }
        st=new Stack();
        for(int i=n-1;i>=0;i--){
            while(!st.isEmpty() && a[st.peek()]>=a[i])st.pop();
            if(!st.isEmpty())
             right[i]=st.peek();
            st.push(i);
        }
        for(int i=0;i<n;i++){
            int len=right[i]-left[i]-1;
            ans[len]=Math.max(a[i], ans[len]);
        }
        for(int i=n-1;i>=1;i--){
            ans[i]=Math.max(ans[i], ans[i+1]);
        }
        for(int i=0;i<n;i++)ans[i]=ans[i+1];
        return ans;
    }
}

