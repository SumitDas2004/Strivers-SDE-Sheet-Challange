import java.util.Arrays;
public class Solution {
	static int solve(int price[], int i, int len, int dp[][]){
		if(i==-1){
			if(len==0)return 0;
			return Integer.MIN_VALUE;
		}
		if(dp[i][len]!=-1)return dp[i][len];
		int cut=Integer.MIN_VALUE;
		int notCut=solve(price, i-1, len, dp);
		if(len-i-1>=0)cut=solve(price, i, len-i-1, dp)+price[i];
		return dp[i][len]=Math.max(cut, notCut);
	}
	public static int cutRod(int price[], int n) {
		// Write your code here.
		int dp[][]=new int[n][n+1];
		for(int i[]:dp)Arrays.fill(i, -1);
		return solve(price, n-1, n, dp);
	}
}