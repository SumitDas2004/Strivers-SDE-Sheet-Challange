import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the Binary Tree node structure:
    
   class TreeNode {
	    int data;
	    TreeNode left;
	    TreeNode right;

	    TreeNode(int data) {
		    this.data = data;
		    this.left = null;
		    this.right = null;
	    }

    }

************************************************************/

import java.util.ArrayList;
public class Solution {
static void getleft(TreeNode root, ArrayList<Integer> list){
	if(root==null)return;
	if(root.left==null && root.right==null)return ;
	list.add(root.data);
	if(root.left!=null)getleft(root.left, list);
	else if(root.right!=null)
	getleft(root.right, list);
}
static void getright(TreeNode root, ArrayList<Integer> list){
	if(root==null)return;
	if(root.left==null && root.right==null)return ;
	if(root.right!=null)getright(root.right, list);
	else if(root.left!=null)
	getright(root.left, list);
	list.add(root.data);
}
static void getleaf(TreeNode root, ArrayList<Integer> list){
	if(root==null)return ;
	if(root.left==null && root.right==null)list.add(root.data);
	getleaf(root.left, list);
	getleaf(root.right, list);
}

	public static ArrayList<Integer> traverseBoundary(TreeNode root){
		// Write your code here.
		ArrayList<Integer> ans=new ArrayList<>();
		ans.add(root.data);
		getleft(root.left, ans);
		getleaf(root.left, ans);
		getleaf(root.right, ans);
		getright(root.right, ans);
		return ans;
	}
}