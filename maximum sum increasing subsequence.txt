import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution {
    static int solve(ArrayList<Integer> rack, int i, int last, int n, int dp[][]){
        if(i==n)return 0;
        if(dp[i+1][last+1]!=-1)return dp[i+1][last+1];
        int pick=0;
        int nonPick=0;
        if(last!=-1 && rack.get(i)>rack.get(last)){
            pick=rack.get(i)+solve(rack, i+1, i, n, dp);
        }else if(last==-1){
            pick=rack.get(i)+solve(rack, i+1, i, n, dp);
        }
        nonPick=solve(rack, i+1, last, n, dp);
        return dp[i+1][last+1]=Math.max(pick, nonPick);
    }
    public static int maxIncreasingDumbbellsSum(ArrayList<Integer> rack, int n) {
        // Write your code here.
        int dp[][]=new int[n+1][n+1];
        for(int i[]:dp)Arrays.fill(i, -1);
        return solve(rack, 0, -1, n, dp);
    }
}