import java.util.* ;
import java.io.*; 
public class Solution {
    static int dirx[]=new int[]{0, 0, 1, -1};
    static int diry[]=new int[]{1, -1, 0, 0};
    static ArrayList<ArrayList<Integer>> list=new ArrayList<>();
    static void solve(int maze[][], int i, int j, int[][] tmp, boolean visited[][])
    {
        tmp[i][j]=1;
        if(i==maze.length-1 && j==maze.length-1){
            ArrayList<Integer> tmp1=new ArrayList<>();
            for(int[] e:tmp)for(int f:e)tmp1.add(f);
            list.add(tmp1);
            return;
        }
            visited[i][j]=true;
        for(int e=0;e<4;e++){
            int x=dirx[e]+i;
            int y=diry[e]+j;
            if(x<0 || y<0 || x==maze.length || y==maze[0].length || visited[x][y] || maze[x][y]==0)continue;
            solve(maze, x, y, tmp, visited);
        }
            visited[i][j]=false;
        tmp[i][j]=0;
    }
    public static ArrayList<ArrayList<Integer>> ratInAMaze(int[][] maze, int n) {
        // Write your code here.
        if(maze[0][0]==0)return new ArrayList<>();
        boolean[][] visited=new boolean[n][n];
        list=new ArrayList<>();
        solve(maze, 0, 0, new int[n][n], new boolean[n][n]);
        return list;
    }
}