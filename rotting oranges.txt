import java.util.*;

public class Solution {

	public static int minTimeToRot(int[][] grid, int n, int m) {
		// Write your code here.
		boolean visited[][]=new boolean[n][m];
		int ans=0;
		Queue<int[]> q=new LinkedList<>();
		int dx[]={0, 0, 1, -1};
		int dy[]={1, -1, 0, 0};
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				if(grid[i][j]==2){
					q.add(new int[]{i, j});
					visited[i][j]=true;
				}
			}
		}
		while(!q.isEmpty()){
			int size=q.size();
			while(size-->0){
				int[] cur=q.poll();
				for(int i=0;i<4;i++){
					int x=dx[i]+cur[0];
					int y=dy[i]+cur[1];
					if(x<0 || y<0 || x==n || y==m || visited[x][y] || grid[x][y]==0 || grid[x][y]==2)continue;
					visited[x][y]=true;
					q.add(new int[]{x, y});
				}
			}
			ans++;
		}
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				if(grid[i][j]!=0 && !visited[i][j]){
					return -1;
				}
			}
		}
		if(ans==0)return 0;
		return ans-1;
	}

}