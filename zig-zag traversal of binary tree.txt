import java.util.* ;
import java.io.*; 
/*
	Following is the class used to represent the object/node of the Binary Tree

	class BinaryTreeNode<T> {
	    T data;
	    BinaryTreeNode<T> left;
	    BinaryTreeNode<T> right;

	    public BinaryTreeNode(T data) {
	        this.data = data;
	    }
	}
*/

public class Solution {
	public static List<Integer> zigZagTraversal(BinaryTreeNode<Integer> root) {
		// Write your code here!
	ArrayList<ArrayList<Integer>> list=new ArrayList<>();
	if(root==null)return new ArrayList<>();
	Queue<BinaryTreeNode<Integer>> q=new LinkedList<>();
	q.add(root);
	while(!q.isEmpty()){
		int size=q.size();
		ArrayList<Integer> tmp=new ArrayList<>();
		while(size-->0){
			BinaryTreeNode<Integer> cur=q.poll();
			tmp.add(cur.data);
			if(cur.left!=null)q.add(cur.left);
			if(cur.right!=null)q.add(cur.right);
		}
		list.add(tmp);
	}
	ArrayList<Integer> ans=new ArrayList<>();
	for(int i=0;i<list.size();i++){
		if(i%2==0)for(int j:list.get(i))ans.add(j);
		else {
			for(int j=list.get(i).size()-1;j>=0;j--){
				ans.add(list.get(i).get(j));
			}
		}
	}
	return ans;
	}
}
