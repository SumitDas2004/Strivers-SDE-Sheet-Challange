import java.util.Arrays;
public class Solution {
    static int solve(String s1, String s2, int i, int j, int dp[][]){
        if(i==s1.length() && j==s2.length())return 0;
        if(i==s1.length())return s2.length()-j;
        if(j==s2.length())return s1.length()-i;
        if(dp[i][j]!=-1)return dp[i][j];
        if(s1.charAt(i)==s2.charAt(j))return solve(s1, s2, i+1, j+1, dp);
        int delete=1+solve(s1, s2, i+1, j, dp);
        int replace=1+solve(s1, s2, i+1, j+1, dp);
        int insert=1+solve(s1, s2, i, j+1, dp);
        return dp[i][j]=Math.min(replace, Math.min(delete, insert));
    }

    public static int editDistance(String str1, String str2) {
        //Your code goes here
        int dp[][]=new int[str1.length()][str2.length()];
        for(int i[]:dp)Arrays.fill(i, -1);
        return solve(str1, str2, 0, 0, dp);
    }
}