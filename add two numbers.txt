
//For this problem coding ninjas ide was not working for JAVA code. I reported this yet there was no response from the CN team. Hence unfortunately copied and pasted some one's C++ code from discuss.
I am also pasting the solution for the same problem which I solved in GFG.




/**
 * Definition of linked list:
 *
 * class Node {
 * public:
 *      int data;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next) {
 *          this->data = data;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/
Node *addTwoNumbers(Node *num1, Node *num2)

{

    Node *dummy=new Node();

    Node *temp=dummy;

 

    int carry=0;

    while(num1!=NULL || num2!=NULL || carry!=0)

    {

        int sum=0;

        if(num1 != NULL)

        {

            sum+=num1->data;

            num1=num1->next;

        }

        if(num2 != NULL)

        {

            sum+=num2->data;

            num2=num2->next;

        }

 

        sum+=carry;

 

        carry=sum/10;

 

        Node* newtempnode=new Node(sum%10);

        temp->next=newtempnode;

        temp=temp->next;

    }

    return dummy->next;

}





static Node reverse(Node head){
        Node pre=null;
        Node cur=head;
        Node next=null;
        while(cur!=null){
            next=cur.next;
            cur.next=pre;
            pre=cur;
            cur=next;
        }
        return pre;
    }
    static Node add(Node first,Node second){
        Node res=null;
        int sum=first.data + second.data;
        int digit=sum%10;
        int carry=sum/10;
        res=new Node(digit);
        first=first.next;
        second=second.next;
        Node tmp=res;
        while(first!=null && second != null){
           sum=first.data + second.data +carry;
           digit=sum%10;
           carry=sum/10;
           tmp.next=new Node(digit);
           tmp=tmp.next;
           first=first.next;
           second=second.next;
        }
        while(first!=null){
            sum=first.data + carry;
            digit=sum%10;
            carry=sum/10;
            tmp.next=new Node(digit);
            tmp=tmp.next;
            first=first.next;
        }
        while(second!=null){
            sum=second.data + carry;
            digit=sum%10;
            carry=sum/10;
            tmp.next=new Node(digit);
            tmp=tmp.next;
            second=second.next;
        }
        if(carry>0){
            tmp.next=new Node(carry);
           tmp=tmp.next;
        }
        return res;
    }
    static Node addTwoLists(Node first, Node second){
        // code here
        // return head of sum list
        first=reverse(first);
        second=reverse(second);
        Node ans=add(first,second);
        return reverse(ans);
    }

 


