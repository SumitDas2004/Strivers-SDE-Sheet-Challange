import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution 
{
    static int conquer(int left, int mid, int right, ArrayList<Integer> arr){
        int s1=left;
        int s2=mid+1;
        int tmp[]=new int[right-left+1];
        int k=0;
        int cnt=0;
        while(s1<=mid && s2<=right){
            if(arr.get(s1)>2*arr.get(s2)){
            cnt+=mid-s1+1;
            s2++;
            }else s1++;
        }
        s1=left;
        s2=mid+1;
        while(s1<=mid && s2<=right){
            if(arr.get(s1)<=arr.get(s2)){
            tmp[k++]=arr.get(s1++);
            }else tmp[k++]=arr.get(s2++);
        }
        while(s1<=mid)tmp[k++]=arr.get(s1++);
        while(s2<=right)tmp[k++]=arr.get(s2++);
        for(int i=0;i<tmp.length;i++){
            arr.set(left++, tmp[i]);
        }
        return cnt;
    }
    static int divide(int l, int r, ArrayList<Integer> arr){
        if(l>=r)return 0;
        int mid=l+(r-l)/2;
        return divide(l, mid, arr)+divide(mid+1, r, arr)+conquer(l, mid, r, arr);
    }
        public static int reversePairs(ArrayList<Integer> arr) 
    {
        // Write your code here.
        return divide(0, arr.size()-1, arr);
    }
}